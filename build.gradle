plugins {
    id 'org.springframework.boot' version '2.5.13'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
}

repositories {
    mavenLocal()
    mavenCentral()
//    maven {
//        url = 'https://repo1.maven.org/maven2'
//    }
//    maven {
//        url = 'https://repo.maven.apache.org/maven2'
//    }
//    maven {
//        url = 'https://splunk.jfrog.io/splunk/ext-releases-local'
//    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation('org.springframework:spring-context') {
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
//    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.slf4j:jcl-over-slf4j:1.7.30'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.2-jre'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.2'
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0'
    implementation 'com.sun.xml.ws:jaxws-ri:2.3.2'

    implementation group: 'com.exlibris', name: 'dps-sdk', version: '7.1.0'
    implementation group: 'com.exlibris', name: 'dps-sdk-deposit-api', version: '7.1.0'
    implementation group: 'nz.govt.natlib.ndha', name: 'commons', version: '3.2'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'org.apache.xmlbeans', name: 'xmlbeans', version: '3.0.1'
//    implementation group: 'org.apache.xmlbeans', name: 'xmlbeans', version: '4.0.0'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'
//    implementation group: 'org.dom4j', name: 'dom4j', version: '2.1.3'
    implementation group: 'jaxen', name: 'jaxen', version: '1.2.0'
    implementation group: 'commons-net', name: 'commons-net', version: '3.7'
    implementation 'org.apache.commons:commons-lang3:3.11'
//    implementation  group: 'com.sleepycat', name: 'je', version: '18.3.12'
    implementation group: 'oro', name: 'oro', version: '2.0.8'
//    implementation group: 'com.splunk.logging', name: 'splunk-library-javalogging', version: '1.8.0'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
//    implementation 'com.h2database:h2:1.4.199'
    implementation 'commons-io:commons-io:2.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.13.1'
}

test {
    useJUnitPlatform()
}

group = 'deposit-dashboard'
version = '2.0.0-rc3'
description = 'Dashboard Tool'
sourceCompatibility = '1.11'
targetCompatibility = '1.11'

tasks.register('sourcesJar', Jar) {
    archiveClassifier.set('sources')
    from(sourceSets.main.allJava)
}

tasks.register('testsJar', Jar) {
    archiveClassifier.set('tests')
    from(sourceSets.test.output)
}

tasks.register('cleanUI', Delete) {
    group = "BuildUI"
    description = "Remove the dist folder and webapp folder"
    delete './ui/dist', './src/main/webapp/'
    followSymlinks = true
    doLast {
        println 'UI cleaning done!'
    }
}

tasks.register('installUI', Exec) {
    group = "BuildUI"
    description = "Install the dependencies for UI"
    workingDir './ui'
    commandLine 'npm', 'install'
    doLast {
        println 'UI installation done!'
    }
}

tasks.register('buildUI', Exec) {
    group = "BuildUI"
    description = "Run npm install and build-only"
    dependsOn tasks.installUI
    workingDir './ui'
    commandLine 'npm', 'run', 'build-only'
    doLast {
        println 'UI building done!'
    }
}


tasks.register('copyUI', Copy) {
    group = "BuildUI"
    description = "Copy the files from dist folder to webapp folder"
    dependsOn tasks.buildUI
    from './ui/dist'
    into './src/main/webapp'
    doLast {
        println 'UI copying done!'
        println 'All UI tasks done!'
    }
}

bootWar {
    dependsOn tasks.copyUI
}

war {
    dependsOn tasks.copyUI
}

bootRun {
    dependsOn tasks.copyUI
}

clean {
    dependsOn tasks.cleanUI
}

build {
    dependsOn tasks.copyUI
}

